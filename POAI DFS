def dfs_recursive(graph, start, visited=None):
    if visited is None:
        visited = set()
    visited.add(start)
    print(start, end=' ')
    for neighbor in graph.get(start, []):
        if neighbor not in visited:
            dfs_recursive(graph, neighbor, visited)

def depth_first_search_alternative():
    graph = {
        'P': ['Q', 'R'],
        'Q': ['S', 'T'],
        'R': ['U'],
        'S': [],
        'T': ['U'],
        'U': []
    }
    
    dfs_recursive(graph, 'P')

depth_first_search_alternative()
